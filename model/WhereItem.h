/**
 * Switch Database REST API
 * Switch API is the primary endpoint of data sevices and Switch DB's platform. You can do adding, editing, deleting or listing data works to your database with query operations by using this low-level API based on HTTP.
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * WhereItem.h
 *
 * 
 */

#ifndef WhereItem_H_
#define WhereItem_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  WhereItem
    : public ModelBase
{
public:
    WhereItem();
    virtual ~WhereItem();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// WhereItem members

    /// <summary>
    /// You can explain the controls of more than one state with where. The controls of states: equal, notEqual, like, greaterThan, lessThan
    /// </summary>
    utility::string_t getType() const;
    void setType(utility::string_t value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// Column name
    /// </summary>
    utility::string_t getColumn() const;
    void setColumn(utility::string_t value);
    bool columnIsSet() const;
    void unsetColumn();
    /// <summary>
    /// Column value
    /// </summary>
    utility::string_t getValue() const;
    void setValue(utility::string_t value);
    bool valueIsSet() const;
    void unsetValue();

protected:
    utility::string_t m_Type;
    bool m_TypeIsSet;
utility::string_t m_Column;
    bool m_ColumnIsSet;
utility::string_t m_Value;
    bool m_ValueIsSet;
};

}
}
}
}

#endif /* WhereItem_H_ */
