/**
 * Switch Database REST API
 * Switch API is the primary endpoint of data sevices and Switch DB's platform. You can do adding, editing, deleting or listing data works to your database with query operations by using this low-level API based on HTTP.
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * AuthorizationApi.h
 *
 * 
 */

#ifndef AuthorizationApi_H_
#define AuthorizationApi_H_


#include "ApiClient.h"

#include "Error.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  AuthorizationApi
{
public:
    AuthorizationApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~AuthorizationApi();
    /// <summary>
    /// Generate Access Token
    /// </summary>
    /// <remarks>
    /// For generating Access Token, you need API Key and API Secret parameters that are provided from the developer portal. At the request, API Key that will be sent by using header is generated as portal API Key and Signature parameter is generated as md5(APISecret + ExpireTimestamp) format. At Expire parameter, token&#39;s expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information. 
    /// </remarks>
    /// <param name="aPIKey">Your Switch API Key.</param>/// <param name="signature">Signature parameter is generated as md5(APISecret + ExpireTimestamp) format.</param>/// <param name="expire">Expire parameter, token&#39;s expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information.</param>
    pplx::task<utility::string_t> tokenGet(utility::string_t aPIKey, utility::string_t signature, int64_t expire);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* AuthorizationApi_H_ */

